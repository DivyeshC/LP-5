import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import matplotlib.pyplot as plt

vocab_size = 10000
max_length = 200
(x_train, y_train), (x_test, y_test) = keras.datasets.imdb.load_data(num_words=vocab_size)

x_train = keras.preprocessing.sequence.pad_sequences(x_train,maxlen=max_length, padding='post')
x_test = keras.preprocessing.sequence.pad_sequences(x_test, maxlen=max_length,
padding='post')

model = keras.Sequential([
layers.Embedding(input_dim=vocab_size, output_dim=64),
layers.Conv1D(32, 5, activation='relu'),
layers.GlobalMaxPooling1D(), 
layers.Dense(64, activation='relu'), 
layers.Dense(1, activation='sigmoid') 
])

model.compile(optimizer='adam', loss='binary_crossentropy',
metrics=['accuracy'])

history = model.fit(x_train, y_train, epochs=5, validation_data=(x_test,
y_test), batch_size=64, verbose=1)

loss, accuracy = model.evaluate(x_test, y_test)
print(f"Test Accuracy: {accuracy:.4f}")
print(f"Test Loss: {loss:.4f}")

plt.plot(history.history['accuracy'], label='Train Accuracy')
plt.plot(history.history['val_accuracy'], label='Validation Accuracy')
plt.xlabel('Epochs')
plt.ylabel('Accuracy')
plt.legend()
plt.title('Training and Validation Accuracy')
plt.show()
